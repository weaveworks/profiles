name: Create release
on:
  push:
    tags:
      - 'v*'
  # should be able to not have to create tag manually
  # workflow_dispatch: {}

env:
  CONTROLLER: profiles-controller
  ORG: weaveworks

jobs:
  # run all tests first?
  build-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Kustomize
        uses: fluxcd/pkg/actions/kustomize@main
      - name: Prepare
        id: prep
        run: |
          VERSION=sha-${GITHUB_SHA::8}
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF/refs\/tags\//}
          fi
          echo ::set-output name=BUILD_DATE::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          echo ::set-output name=VERSION::${VERSION}
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          buildkitd-flags: "--debug"
      - name: Login to Dockerhub
        uses: docker/login-action@v1
        with:
          username: weaveworksprofilesci
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Publish multi-arch container image
        uses: docker/build-push-action@v2
        with:
          push: true
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          tags: |
            docker.io/${{ env.ORG }}/${{ env.CONTROLLER }}:${{ steps.prep.outputs.VERSION }}
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.version=${{ steps.prep.outputs.VERSION }}
            org.opencontainers.image.created=${{ steps.prep.outputs.BUILD_DATE }}
      - name: Check images
        run: |
          docker buildx imagetools inspect docker.io/${{ env.ORG }}/${{ env.CONTROLLER }}:${{ steps.prep.outputs.VERSION }}
          docker pull docker.io/${{ env.ORG }}/${{ env.CONTROLLER }}:${{ steps.prep.outputs.VERSION }}
      - name: Generate release manifests
        run: |
          mkdir -p config/release
          kustomize build ./config/crd > ./config/release/${{ env.CONTROLLER }}.crds.yaml
          kustomize build ./config/manager > ./config/release/${{ env.CONTROLLER }}.deployment.yaml
      - name: Do release
        uses: softprops/action-gh-release@v1
        with:
          bodyPath: "docs/release_notes/${{ steps.prep.outputs.VERSION }}.md"
          files: "config/release/*.yaml"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
